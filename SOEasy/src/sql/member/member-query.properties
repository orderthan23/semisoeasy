checkStatus=SELECT * FROM MEMBER WHERE M_ID = ?
selectOne = SELECT M.* , I.* FROM MEMBER M JOIN IMAGE I ON(M.MEMBER_NO = I.MEMBER_NO) WHERE M_ID=? AND M_PASSWORD=?
idCheck=SELECT COUNT(*) FROM MEMBER WHERE M_ID = ?
nickCheck=SELECT COUNT(*) FROM MEMBER WHERE M_NICK = ? 
checkEmail=SELECT COUNT(*) FROM MEMBER WHERE M_EMAIL = ?
checkYou=SELECT COUNT(*) FROM MEMBER WHERE M_PHONE = ? AND M_NAME=?
insertMember=INSERT INTO MEMBER VALUES(SEQ_MEMBER.NEXTVAL,1,?,?,?,?,?,?,SYSDATE,'Y', null, null )
findId=SELECT M_ID FROM MEMBER WHERE M_NAME=? AND M_EMAIL=?
findPwd=SELECT MEMBER_NO FROM MEMBER WHERE M_ID=? AND M_EMAIL=?
updatePwd=UPDATE MEMBER SET M_PASSWORD=? WHERE MEMBER_NO=?
correctPwd=SELECT COUNT(*) FROM MEMBER WHERE M_ID=? AND M_PASSWORD=?
deleteMember=UPDATE MEMBER SET M_STATUS='N',M_DROP_DATE=SYSDATE,M_DROP_REASON=? WHERE M_ID=? AND M_PASSWORD=?
updateMember1=UPDATE MEMBER SET M_NICK=?, M_NAME=?, M_PHONE=?, M_EMAIL=? WHERE M_ID=?
updateMember3=UPDATE MEMBER SET M_NICK=?, M_NAME=?, M_PASSWORD=?, M_PHONE=?, M_EMAIL=? WHERE M_ID=?
updateProfile=UPDATE IMAGE SET ORIGIN_NAME=?, FILE_PATH=?, CHANGE_NAME=? WHERE MEMBER_NO=? AND IMG_DIV=2
insertDefaultProfile=INSERT INTO IMAGE VALUES(SEQ_IMAGE.NEXTVAL,?,?,?,2,NULL,SEQ_MEMBER.CURRVAL,NULL)
listCount1 = SELECT COUNT(*) FROM MEMBER
selectAllList=SELECT RNUM , MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM ( SELECT ROWNUM RNUM , MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM (SELECT MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM MEMBER ORDER BY MEMBER_NO DESC )) WHERE RNUM BETWEEN ? AND ?
findImg=SELECT CHANGE_NAME FROM IMAGE WHERE MEMBER_NO=? AND IMG_DIV=2
blockMember=UPDATE MEMBER SET M_STATUS='X' WHERE M_ID=?
listCount2 = SELECT COUNT(*) FROM MEMBER WHERE 
selectAllList2=SELECT RNUM , MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM ( SELECT ROWNUM RNUM , MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM (SELECT MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM MEMBER WHERE
listCount3= SELECT COUNT(*) FROM MEMBER WHERE M_ID LIKE ?
selectAllList3=SELECT RNUM , MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM ( SELECT ROWNUM RNUM , MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM (SELECT MEMBER_NO , P_TYPE , M_NAME , M_ID , M_NICK , M_PHONE , M_EMAIL , M_ENROLL_DATE , M_STATUS FROM MEMBER WHERE M_ID LIKE ? ORDER BY MEMBER_NO DESC )) WHERE RNUM BETWEEN ? AND ?
listCount4 = SELECT COUNT(*) FROM MEMBER WHERE M_STATUS='W'
canRecover=SELECT CEIL(SYSDATE-M_DROP_DATE) FROM MEMBER WHERE M_STATUS IN('N','W')  AND M_ID = ?
requestRecover =INSERT INTO MEMBER_RESTORE_HISTORY VALUES(?,SYSDATE,?,1,SEQ_MEMBER_RESTORE_HISTORY.NEXTVAL)
updateRecoverStatus=UPDATE MEMBER SET M_STATUS='W' WHERE MEMBER_NO=?
isFirstTime=SELECT COUNT(*) FROM MEMBER_RESTORE_HISTORY WHERE RESTORE_STATUS=1 AND MEMBER_NO=?
selectAllRecoverList = SELECT RNUM, MEMBER_NO,RESTORE_NO, M_ID, M_DROP_REASON , RESTORE_EMAIL, RESTORE_REQUEST_DATE, RESTORE_STATUS FROM ( SELECT  ROWNUM RNUM, MEMBER_NO, RESTORE_NO, M_ID, M_DROP_REASON, RESTORE_EMAIL, RESTORE_REQUEST_DATE, RESTORE_STATUS FROM (SELECT M.MEMBER_NO, MR.RESTORE_NO, M.M_ID, M.M_DROP_REASON, MR.RESTORE_EMAIL, MR.RESTORE_REQUEST_DATE, MR.RESTORE_STATUS FROM MEMBER M JOIN MEMBER_RESTORE_HISTORY MR ON (M.MEMBER_NO = MR.MEMBER_NO) ORDER BY RESTORE_NO DESC )) WHERE RNUM BETWEEN ? AND ?
updateRecover = UPDATE MEMBER_RESTORE_HISTORY SET RESTORE_STATUS = ? WHERE MEMBER_NO = ?
recoverStatus= UPDATE MEMBER SET M_STATUS='Y' WHERE MEMBER_NO=?
getListOptionCount=SELECT COUNT(*) FROM MEMBER_RESTORE_HISTORY WHERE RESTORE_STATUS=?
searchRecoverOption=SELECT RNUM, MEMBER_NO,RESTORE_NO, M_ID, M_DROP_REASON , RESTORE_EMAIL, RESTORE_REQUEST_DATE, RESTORE_STATUS FROM ( SELECT  ROWNUM RNUM, MEMBER_NO, RESTORE_NO, M_ID, M_DROP_REASON, RESTORE_EMAIL, RESTORE_REQUEST_DATE, RESTORE_STATUS FROM (SELECT M.MEMBER_NO, MR.RESTORE_NO, M.M_ID, M.M_DROP_REASON, MR.RESTORE_EMAIL, MR.RESTORE_REQUEST_DATE, MR.RESTORE_STATUS FROM MEMBER M JOIN MEMBER_RESTORE_HISTORY MR ON (M.MEMBER_NO = MR.MEMBER_NO)  ORDER BY RESTORE_NO DESC) WHERE RESTORE_STATUS = ?) WHERE RNUM BETWEEN ? AND ? 







